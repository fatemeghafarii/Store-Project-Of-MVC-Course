// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Infrastructure.Contexts;

#nullable disable

namespace Shop.Infrastructure.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20230521135335_AddSeedDataForTSize")]
    partial class AddSeedDataForTSize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Shop.Model.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("NVarChar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVarChar(512)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Shop.Model.Models.ProductTShirtSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TShirtSizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TShirtSizeId");

                    b.ToTable("ProductTShirtSize");
                });

            modelBuilder.Entity("Shop.Model.Models.TShirtSize", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVarChar(512)");

                    b.HasKey("Id");

                    b.ToTable("TShirtSize");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SM"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "LG"
                        },
                        new
                        {
                            Id = 4,
                            Name = "XL"
                        });
                });

            modelBuilder.Entity("Shop.Model.Models.ProductTShirtSize", b =>
                {
                    b.HasOne("Shop.Model.Models.Product", "Product")
                        .WithMany("ProductTShirtSizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Model.Models.TShirtSize", "TShirtSize")
                        .WithMany("ProductTShirtSizes")
                        .HasForeignKey("TShirtSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TShirtSize");
                });

            modelBuilder.Entity("Shop.Model.Models.Product", b =>
                {
                    b.Navigation("ProductTShirtSizes");
                });

            modelBuilder.Entity("Shop.Model.Models.TShirtSize", b =>
                {
                    b.Navigation("ProductTShirtSizes");
                });
#pragma warning restore 612, 618
        }
    }
}
